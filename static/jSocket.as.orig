
package {
	import flash.display.Sprite;
	import flash.external.ExternalInterface;
	import flash.events.*;
	import flash.net.Socket;
	import flash.system.Security;

	public class jSocket extends Sprite
	{               
		protected var socket:Socket;
		protected var id:String;

		public function jSocket():void {
			// Pass exceptions between flash and browser
			ExternalInterface.marshallExceptions = true;

			var url:String = root.loaderInfo.url;
			id = url.substring(url.lastIndexOf("?") + 1);

			socket = new Socket();
			socket.addEventListener("close", onClose);
			socket.addEventListener("connect", onConnect);
			socket.addEventListener("ioError", onError);
			socket.addEventListener("securityError", onSecurityError);
			socket.addEventListener("socketData", onData);


			ExternalInterface.addCallback("connect", connect);
			ExternalInterface.addCallback("close", close);
			ExternalInterface.addCallback("write", write);

			ExternalInterface.call("jSocket.flashCallback", "init", id);
		}

		public function connect(host:String, port:int):void{
			Security.loadPolicyFile("xmlsocket://"+host+":8843");
			socket.connect(host, port);
		}

		public function close():void{
			socket.close();
		}

		public function write(object:*):void{
			socket.writeUTFBytes(object);
			socket.flush();
		}

		protected function onConnect(event:Event):void{
			ExternalInterface.call("jSocket.flashCallback", "connect", id);
		}

		protected function onError(event:IOErrorEvent):void{
			ExternalInterface.call("jSocket.flashCallback", "error", id, event.text);
		}

		protected function onSecurityError(event:SecurityErrorEvent):void{
			ExternalInterface.call("jSocket.flashCallback", "error", id, event.text);
		}

		protected function onClose(event:Event):void{
			socket.close();
			ExternalInterface.call("jSocket.flashCallback", "close", id);
		}

		protected function onData(event:ProgressEvent):void{
			ExternalInterface.call("jSocket.flashCallback", "data", id, socket.readUTFBytes(event.bytesLoaded));
		}
	}       
}

